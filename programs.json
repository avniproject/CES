[ {
  "name" : "Tuberculosis",
  "uuid" : "67bfb2fd-d0a4-4c2c-8478-a346709dd447",
  "colour" : "#E4287C",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : null,
  "enrolmentSummaryRule" : "'use strict';\n({params, imports}) =>  {\n    const summaries = [];\n    const programEnrolment = params.programEnrolment;\n  \n    //Status\n    const status = programEnrolment.findLatestObservationInEntireEnrolment('Status');\n    console.log('Status',status);\n    if (status ) {\n      summaries.push({name: 'Status', value: status.getValue()});\n    }\n  \n    const tbType = programEnrolment.findObservationInEntireEnrolment('TB Type');\n    console.log('tbType',tbType);\n    if (tbType) {\n      summaries.push({name: 'TB Type', value: tbType.getValue()});\n    }\n    \n   \n    \n    \n    //Current status\n     const currentStatus = programEnrolment.findObservationInEntireEnrolment('Current status');\n    console.log('Current status',currentStatus);\n    if (currentStatus ) {\n     // summaries.push({name: 'Current status', value: currentStatus.getValue()});\n    }\n    \n    const currentTreatmentPhase = programEnrolment.findObservationInEntireEnrolment('Current Treatment Phase');\n    console.log('currentTreatmentPhase',currentTreatmentPhase);\n    if(currentTreatmentPhase){ \n    //   summaries.push({name: 'Current Treatment Phase', value: currentTreatmentPhase.getValue()});\n   }\n   \n   //End of Treatment Phase\n  //  const endTreatmentPhase = programEnrolment.findObservationInEntireEnrolment('End of Treatment Phase');\n    //console.log('endTreatmentPhase',endTreatmentPhase);\n   // if(endTreatmentPhase){ \n     // summaries.push({name: 'End of Treatment Phase', value: endTreatmentPhase.getValue()});\n   //}\n    \n    //Treatment start date\n    const treatmentStartDate = programEnrolment.findObservationInEntireEnrolment('Treatment start date');\n     console.log('treatmentStartDate',treatmentStartDate);\n    if(treatmentStartDate){ \n       var treatmentStart = imports.moment(treatmentStartDate.getValue()).toDate();\n      summaries.push({name: 'Treatment start date', value: treatmentStart});\n   }\n   \n   \n   \n    //IP End Date\n   const ipEndDate = programEnrolment.findObservationInEntireEnrolment('IP End Date');\n     console.log('IP End Date',treatmentStartDate);\n   if(ipEndDate){ \n    var ipEnd = imports.moment(ipEndDate.getValue()).toDate();\n    summaries.push({name: 'IP End Date', value: ipEnd});\n   }\n   \n   //CP start date\n   const cpStartDate = programEnrolment.findObservationInEntireEnrolment('CP start date');\n     console.log('cpStartDate',cpStartDate);\n   if(cpStartDate){\n    var cpStart = imports.moment(cpStartDate.getValue()).toDate();\n    summaries.push({name: 'CP start date', value: cpStart});\n   }\n   \n  \n   \n   //CP End Date\n   const cpEndDate = programEnrolment.findObservationInEntireEnrolment('CP End Date');\n     console.log('cpEndDate',cpEndDate);\n   if(cpEndDate){ \n    var cpEnd = imports.moment(cpEndDate.getValue()).toDate();\n    summaries.push({name: 'CP End Date', value: cpEnd});\n   }\n   \n   //Treatment Outcome\n const treatmentOutcome = programEnrolment.findObservationInEntireEnrolment('Treatment Outcome');\n    console.log('treatmentOutcome',treatmentOutcome);\n    if(treatmentOutcome){ \n       summaries.push({name: 'Treatment Outcome', value: treatmentOutcome.getValue()});\n   }\n   \n \n    return summaries;\n};"
} ]